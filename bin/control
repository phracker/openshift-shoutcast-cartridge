#!/bin/bash

# Source utility functions.
source $OPENSHIFT_CARTRIDGE_SDK_BASH
#source "${OPENSHIFT_SCS_DIR}/lib/shoutinterface"

env_dir="${OPENSHIFT_SCS_DIR}/env"

STOPTIMEOUT=10
FMT="%a %b %d %Y %H:%M:%S GMT%z (%Z)"

function ping_server_gears() {
    #  Ping the server gears and wake 'em up on startup.
    for geardns in $(web_gears | cut -f 3 -d ','); do
          [ -z "$geardns" ]  ||  curl "http://$geardns/" > /dev/null 2>&1  ||  :
    done
}

#create a pid file and test if server is up and running
function is_shoutcast_running() {
	if ! -f ${OPENSHIFT_SCS_PID} ; then
		return 0
	else
		return 1
	fi
}

#show the apps logs
function status() {
    if is_shoutcast_running ; then
        client_result "Application is running"
		tail -1 ${OPENSHIFT_LOG_DIR}/shout.log >${OPENSHIFT_LOG_DIR}/shout2.log && mv ${OPENSHIFT_LOG_DIR}/shout2.log ${OPENSHIFT_LOG_DIR}/shout.log
		tail ${OPENSHIFT_LOG_DIR}/shout.log | client_result
    else
        client_result "Application is not running"
    fi
}

#check if this gear is the first gear
function is_primary_gear() {
	if [ "${OPENSHIFT_APP_UUID}" == "${OPENSHIFT_GEAR_UUID}" ]; then
		return 1 #gearid="local-gear"
	else
		return 0
	fi
}
function start() {
#default config for starting up
#should not handle any more than default max for haproxy (256)
read -d '' FileContent << "ENDREAD"
maxuser=256
publicserver=never
requirestreamconfigs=1

ENDREAD
	#srcip=any
		
	if ! -f ${OPENSHIFT_SCS_SHOUTCAST_DIR}/mode.txt ; then
		echo "NORMAL" > ${OPENSHIFT_SCS_SHOUTCAST_DIR}/mode.txt
	fi
	
	SERVER_TYPE="$(<${OPENSHIFT_SCS_SHOUTCAST_DIR}/mode.txt)"
	
	#Auto assign relay gears
	if is_primary_gear ; then
		SERVER_TYPE="RELAY"
	fi
	
	if ! -f ${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_basic.conf ; then
		#default for starting up properly
		echo "${FileContent}" > ${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_basic.conf
		echo "adminpassword=${OPENSHIFT_SCS_SHOUTCAST_ADMIN_PASS}" >>${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_basic.conf
		echo "password=${OPENSHIFT_SCS_USER_PASS}" >>${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_basic.conf
		
		echo "streamid_1=1" >>${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_basic.conf		
		echo "streamadminpassword_1=${OPENSHIFT_SCS_SHOUTCAST_ADMIN_STREAM_PASS}" >>${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_basic.conf
		echo "streampassword_1=${OPENSHIFT_SCS_SHOUTCAST_STREAM_PASS}" >>${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_basic.conf
		
		echo "portbase=${OPENSHIFT_SCS_PORT}" >>${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_basic.conf
		echo "destip=${OPENSHIFT_SCS_IP}" >>${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_basic.conf
		#echo "srcip=${OPENSHIFT_SCS_SRC_IP}" >>${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_basic.conf
		echo "srcip=any" >>${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_basic.conf
		echo "publicip=${OPENSHIFT_APP_DNS}" >>${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_basic.conf
		
		echo "namelookups=1" >>${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_basic.conf
	fi
	
	#FileContent="$(<${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_basic.conf)"
	
	if ! -f ${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_NORMAL.conf ; then
		#echo "${FileContent}" >${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_NORMAL.conf
		echo "include=sc_basic.conf" >${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_NORMAL.conf
	fi

	if ! -f ${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_RELAY.conf ; then
		#echo "${FileContent}" >${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_RELAY.conf
		echo "include=sc_basic.conf" >${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_RELAY.conf
		#should work for relays and source
		echo "relayserver=${OPENSHIFT_APP_DNS}/shoutcast" >>${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_RELAY.conf
		echo "relayport=80" >>${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_RELAY.conf
	fi

	#pull backup over if it contains the authhash
	client_result "Checking Backup Configuration"
	if grep -q authhash "${OPENSHIFT_SCS_SHOUTCAST_CONF}.backup" ; then
		client_result "Restoring Backup Configuration"
		cp ${OPENSHIFT_SCS_SHOUTCAST_CONF}.backup ${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_${SERVER_TYPE}.conf
	fi
	
	#copy over the config to the new file, copy back to capture auth-hash
	client_result "Running sc_${SERVER_TYPE}.conf"
	cp ${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_${SERVER_TYPE}.conf ${OPENSHIFT_SCS_SHOUTCAST_CONF}
	#run the server
	nohup ${OPENSHIFT_REPO_DIR}/server/sc_serv ${OPENSHIFT_SCS_SHOUTCAST_CONF} > ${OPENSHIFT_LOG_DIR}/shout.log 2>&1 &
	ps -ef | grep sc_serv | grep -v grep>jobline
	job=`awk '{ print $2 }' jobline`
	slog="$(<${OPENSHIFT_LOG_DIR}/shout.log)"
	conflog=$(print_conf "TEST")
	echo "$job" >${OPENSHIFT_SCS_SHOUTCAST_DIR}/stream.pid
	rm -f jobline
	
	#if the streamauthhash appears
	if grep -q authhash "${OPENSHIFT_SCS_SHOUTCAST_CONF}" ; then
		cp ${OPENSHIFT_SCS_SHOUTCAST_CONF} ${OPENSHIFT_SCS_SHOUTCAST_DIR}/sc_${SERVER_TYPE}.conf
	fi
	
	if is_shoutcast_running ; then
        client_result "Shoutcast has Started"
		client_result "PID $job copied to stream.pid"
	else
		client_result "Problem: $slog"
	fi
}

#add a relay 
function scale-up() {
	echo
}

#find least used gear and kill it
function scale-down() {
	echo
}

function stop() {

if [ -z "$(ps -ef | grep sc_serv | grep -v grep)" ] ; then
    client_result "SHOUTcast is already stopped"
else
	kill `ps -ef | grep sc_serv | grep -v grep | awk '{ print $2 }'` > /dev/null 2>&1
	client_result "SHOUTcast stopped"
fi

}

function restart() {
	stop
	start
}

function build() {
    echo
}

function post-deploy() {
    echo
}

function pre-build() {
    echo
}
#clean out logs
function tidy() {
  client_message "Emptying Log Dir: $OPENSHIFT_SCS_DIR/logs"
  shopt -s dotglob
  rm -rf $OPENSHIFT_SCS_DIR/logs/*
  rm -rf $OPENSHIFT_SCS_DIR/tmp/*
}

#
#  main():
#

# Ensure arguments.
if ! [ $# -eq 1 ]; then
    echo "Usage: $0 [start|restart|graceful|graceful-stop|stop|status]"
    exit 1
fi

# Handle commands.
case "$1" in
    start)               start       ;;
    restart|graceful)    restart     ;;
    graceful-stop|stop)  stop        ;;
    status)              status      ;;
    build)               build       ;;
    pre-build)           pre-build   ;;
    post-deploy)         post-deploy ;;
    tidy)                tidy        ;;
	scale-up)            scale-up    ;;
	scale-down)          scale-down  ;;
    *) exit 0;
esac